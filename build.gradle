buildscript {
	repositories {
		mavenCentral()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.10.RELEASE")
		classpath("se.transmode.gradle:gradle-docker:1.2")
		classpath("org.liquibase:liquibase-core:3.5.3")
		classpath("gradle.plugin.org.liquibase:liquibase-gradle-plugin:1.2.4")
		classpath("org.postgresql:postgresql:42.1.4")
	}
}

apply plugin: 'org.liquibase.gradle'
apply plugin: 'application'
apply plugin: 'docker'
apply plugin: 'java'
apply plugin: 'org.springframework.boot'

group = 'globallogic'
version = '0.0.1'
sourceCompatibility = 1.8

def changeLog = "$projectDir/src/main/resources/changelog.sql"

liquibase {
	activities {
		main {
			changeLogFile changeLog
			url 'jdbc:postgresql://localhost:5432/message'
			username 'root'
			password 'root'
		}
	}
}

repositories {
	mavenCentral()
}

configurations {
	providedRuntime
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.elasticmq:elasticmq-rest-sqs_2.11:0.10.1')
	compile group: 'org.springframework.cloud', name: 'spring-cloud-aws-messaging', version: '1.1.3.RELEASE'
	compile group: 'javax.jms', name: 'javax.jms-api', version: '2.0.1'
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.elasticmq:elasticmq-rest-sqs_2.11:0.10.1')
}

jar {
	baseName = 'spring-boot-queue'
	version = '0.0.1'

	manifest {
		attributes "Main-Class": "com.globallogic.SpringBootQueueApplication"
	}

	from {
		configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
	}
}

springBoot {
	executable = true
}

task buildDocker(type: Docker, dependsOn: build) {
	dockerfile = file('Dockerfile')
}